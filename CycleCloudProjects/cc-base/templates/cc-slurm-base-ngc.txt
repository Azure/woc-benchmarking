
################################
## Cluster Configuration File ##
################################

[cluster Slurm]
FormLayout = selectionpanel
Category = Schedulers

Autoscale = $Autoscale

    [[node defaults]]
    UsePublicNetwork = $UsePublicNetwork
    Credentials = $Credentials    
    SubnetId = $SubnetId
    Region = $Region
    KeyPairLocation = ~/.ssh/cyclecloud.pem
    
    # Slurm autoscaling supports both Terminate and Deallocate shutdown policies
    ShutdownPolicy = $configuration_slurm_shutdown_policy

        [[[configuration]]]
        slurm.version = $configuration_slurm_version
        slurm.accounting.enabled = $configuration_slurm_accounting_enabled
        slurm.accounting.url = $configuration_slurm_accounting_url
        slurm.accounting.user = $configuration_slurm_accounting_user
        slurm.accounting.password = $configuration_slurm_accounting_password
        slurm.additional.config = $additional_slurm_config
        slurm.ha_enabled = $configuration_slurm_ha_enabled
        
        # Disable ip-XXXXXXXX hostname generation
        cyclecloud.hosts.standalone_dns.enabled = ${NodeNameIsHostname==false}
        cyclecloud.hosts.simple_vpc_dns.enabled = ${NodeNameIsHostname==false}

        # For fast spin-up after Deallocate, force an immediate re-converge on boot
        cyclecloud.converge_on_boot = true

        # Disable normal NFS exports and mounts
        cyclecloud.mounts.sched.disabled = true
        cyclecloud.mounts.shared.disabled = true
        cyclecloud.exports.sched.disabled = true
        cyclecloud.exports.shared.disabled = true
        cyclecloud.exports.sched.samba.enabled = false
        cyclecloud.exports.shared.samba.enabled = false
        cyclecloud.exports.defaults.samba.enabled = false      
        cshared.server.legacy_links_disabled = true

        [[[cluster-init cyclecloud/slurm:default]]]
        Optional = true

        [[[configuration cyclecloud.mounts.nfs_shared]]]
        type = nfs
        mountpoint = /shared
        export_path = $NFSSharedExportPath
        address = $NFSAddress
        options = $NFSSharedMountOptions

        [[[configuration cyclecloud.mounts.nfs_sched]]]
        type = nfs
        mountpoint = /sched
        disabled = $NFSSchedDisable

        [[[configuration cyclecloud.mounts.additional_nfs]]]
        disabled = ${AdditionalNAS isnt true}
        type = nfs
        address = ${ifThenElse(AdditionalNAS, AdditonalNFSAddress, undefined)}
        mountpoint = ${ifThenElse(AdditionalNAS, AdditionalNFSMountPoint, undefined)}
        export_path = ${ifThenElse(AdditionalNAS, AdditionalNFSExportPath, undefined)}
        options = ${ifThenElse(AdditionalNAS, AdditionalNFSMountOptions, undefined)}

    [[node scheduler]]
    MachineType = $SchedulerMachineType
    ImageName = $SchedulerImageName
    IsReturnProxy = $ReturnProxy
    AdditionalClusterInitSpecs = $SchedulerClusterInitSpecs
    ComputerName = ${regexps("([^a-zA-Z0-9-])", ifThenElse(SchedulerHostName=="Cluster Prefix", StrJoin("-", ClusterName, "scheduler"), ifThenElse(Size(Trim(SchedulerHostName)) == 0 || SchedulerHostName == "Generated", undefined, SchedulerHostName)), "-")}
    CloudInit = '''#!/bin/bash

apt update
apt install -y mariadb-server

systemctl enable mariadb.service
systemctl start mariadb.service

'''

    # indented version, for clarity.
    # ${regexps("([^a-zA-Z0-9-])",
    #     ifThenElse(SchedulerHostName=="Cluster Prefix",
    #         StrJoin("-", ClusterName, "scheduler"),
    #         ifThenElse(Size(Trim(SchedulerHostName)) == 0 || SchedulerHostName == "Generated",
    #             undefined,
    #             SchedulerHostName)),
    # "-")}
    
        [[[configuration]]]
        cyclecloud.mounts.nfs_sched.disabled = true
        cyclecloud.mounts.nfs_shared.disabled = ${NFSType != "External"}


        [[[cluster-init cyclecloud/slurm:scheduler]]]
        [[[cluster-init cc-base:scheduler:1.0.0]]]
        [[[cluster-init cc-reframe:scheduler:0.1.0]]]
        [[[cluster-init cc-ngc-ub2004:scheduler:0.1.0]]]

        [[[network-interface eth0]]]
        AssociatePublicIpAddress = $UsePublicNetwork

        [[[volume sched]]]
        Size = 60
        SSD = True
        Mount = builtinsched
        Persistent = False

        [[[volume shared]]]
        Size = ${ifThenElse(NFSType == "Builtin", FilesystemSize, 2)}
        SSD = True
        Mount = builtinshared
        Persistent = ${NFSType == "Builtin"}

        [[[configuration cyclecloud.mounts.builtinsched]]]
        disabled = ${NFSType != "Builtin"}
        mountpoint = /sched
        fs_type = xfs

        [[[configuration cyclecloud.mounts.builtinshared]]]
        disabled = ${NFSType != "Builtin"}
        mountpoint = /shared
        fs_type = xfs

        [[[configuration cyclecloud.exports.builtinsched]]]
        export_path = /sched
        options = no_root_squash
        samba.enabled = false
        type = nfs

        [[[configuration cyclecloud.exports.builtinshared]]]
        disabled = ${NFSType != "Builtin"}
        export_path = /shared
        samba.enabled = false
        type = nfs

    [[nodearray scheduler-ha]]
    Extends = scheduler
    IsReturnProxy = false
    ComputerName = ${regexps("([^a-zA-Z0-9-])", ifThenElse(SchedulerHostName=="Cluster Prefix", StrJoin("-", ClusterName, "scheduler", "-ha"), ifThenElse(Size(Trim(SchedulerHostName)) == 0 || SchedulerHostName == "Generated", undefined, SchedulerHostName)), "-")}
    InitialCount = $configuration_slurm_ha_enabled
        [[[configuration]]]
        autoscale.enabled = false
        slurm.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", ClusterName, ""), NodeNamePrefix)}
        slurm.use_nodename_as_hostname = $NodeNameIsHostname

    [[nodearray login]]
        InitialCount = $NumberLoginNodes
        MachineType = $loginMachineType
        ImageName = $SchedulerImageName

        [[[cluster-init cyclecloud/slurm:login]]]
        [[[configuration]]]
        autoscale.enabled = false
        slurm.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", ClusterName, ""), NodeNamePrefix)}
        slurm.use_nodename_as_hostname = $NodeNameIsHostname

    [[node nodearraybase]]
    Abstract = true
        [[[configuration]]]
        slurm.autoscale = true
        
        slurm.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", ClusterName, ""), NodeNamePrefix)}
        slurm.use_nodename_as_hostname = $NodeNameIsHostname

        [[[cluster-init cyclecloud/slurm:execute]]]
        [[[cluster-init cc-base:default:1.0.0]]]
        [[[cluster-init cc-reframe:default:0.1.0]]]
        [[[cluster-init cc-ngc-ub2004:default:0.1.0]]]

        [[[network-interface eth0]]]
        AssociatePublicIpAddress = $ExecuteNodesPublic


    
    [[nodearray hb]]
    Extends = nodearraybase
    MachineType = $hb_machine_type
    ImageName = $hb_image_name
    MaxCoreCount = $hb_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $hb_init_specs


        [[[configuration]]]
        slurm.partition = hb
        slurm.default_partition = true
        slurm.hpc = true


    [[nodearray hbv2]]
    Extends = nodearraybase
    MachineType = $hbv2_machine_type
    ImageName = $hbv2_image_name
    MaxCoreCount = $hbv2_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $hbv2_init_specs


        [[[configuration]]]
        slurm.partition = hbv2
        slurm.dampen_memory = 7
        slurm.hpc = true


    [[nodearray hbv3]]
    Extends = nodearraybase
    MachineType = $hbv3_machine_type
    ImageName = $hbv3_image_name
    MaxCoreCount = $hbv3_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $hbv3_init_specs


        [[[configuration]]]
        slurm.partition = hbv3
        slurm.hpc = true


    [[nodearray hc]]
    Extends = nodearraybase
    MachineType = $hc_machine_type
    ImageName = $hc_image_name
    MaxCoreCount = $hc_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $hc_init_specs


        [[[configuration]]]
        slurm.partition = hc
        slurm.hpc = true


    [[nodearray ncv3]]
    Extends = nodearraybase
    MachineType = $ncv3_machine_type
    ImageName = $ncv3_image_name
    MaxCoreCount = $ncv3_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $ncv3_init_specs


        [[[configuration]]]
        slurm.partition = ncv3
        slurm.hpc = true


    [[nodearray nct4v3]]
    Extends = nodearraybase
    MachineType = $nct4v3_machine_type
    ImageName = $nct4v3_image_name
    MaxCoreCount = $nct4v3_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $nct4v3_init_specs


        [[[configuration]]]
        slurm.partition = nct4v3


    [[nodearray nca100v4]]
    Extends = nodearraybase
    MachineType = $nca100v4_machine_type
    ImageName = $nca100v4_image_name
    MaxCoreCount = $nca100v4_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $nca100v4_init_specs


        [[[configuration]]]
        slurm.partition = nca100v4


    [[nodearray ndv2]]
    Extends = nodearraybase
    MachineType = $ndv2_machine_type
    ImageName = $ndv2_image_name
    MaxCoreCount = $ndv2_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $ndv2_init_specs


        [[[configuration]]]
        slurm.partition = ndv2
        slurm.hpc = true


    [[nodearray ndv4]]
    Extends = nodearraybase
    MachineType = $ndv4_machine_type
    ImageName = $ndv4_image_name
    MaxCoreCount = $ndv4_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $ndv4_init_specs


        [[[configuration]]]
        slurm.partition = ndv4
        slurm.hpc = true


    [[nodearray ndmv4]]
    Extends = nodearraybase
    MachineType = $ndmv4_machine_type
    ImageName = $ndmv4_image_name
    MaxCoreCount = $ndmv4_max_cores
    Azure.MaxScalesetSize = $MaxScalesetSize
    Interruptible = $UseLowPrio
    MaxPrice = $SpotMaxPrice
    AdditionalClusterInitSpecs = $ndmv4_init_specs


        [[[configuration]]]
        slurm.partition = ndmv4
        slurm.dampen_memory = 10
        slurm.hpc = true



[parameters About]
Order = 1

    [[parameters About Slurm]]

        [[[parameter slurm]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<table role=\"presentation\"><tr><td><img alt=\"Slurm icon\" src='static/cloud/cluster/ui/ClusterIcon/slurm.png' width='192' height='192'></td></tr><tr><td><p>Slurm is a highly configurable open source workload manager. See the <a href=\"https://www.schedmd.com/\" target=\"_blank\">Slurm project site</a> for an overview.</p><p>Follow the instructions in the <a href=\"https://github.com/azure/cyclecloud-slurm/\" target=\"_blank\">README</a> for details on instructions on extending and configuring the Project for your environment.</p></td></tr></table>"

[parameters Required Settings]
Order = 10

    [[parameters Virtual Machines ]]
    Description = "The cluster, in this case, has two roles: the scheduler node with shared filer and the execute hosts. Configure which VM types to use based on the requirements of your application."
    Order = 20

        [[[parameter Region]]]
        Label = Region
        Description = Deployment Location
        ParameterType = Cloud.Region

        [[[parameter SchedulerMachineType]]]
        Label = Scheduler VM Type
        Description = The VM type for scheduler node
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_D16as_v4

        [[[parameter loginMachineType]]]
        Label = Login node VM Type
        Description = The VM type for login nodes.
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_D8as_v4

    
        [[[parameter hb_machine_type]]]
        Label = hb VM Type
        Description = The VM type for hb execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_HB60rs
    
        [[[parameter hbv2_machine_type]]]
        Label = hbv2 VM Type
        Description = The VM type for hbv2 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_HB120rs_v2
    
        [[[parameter hbv3_machine_type]]]
        Label = hbv3 VM Type
        Description = The VM type for hbv3 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_HB120rs_v3
    
        [[[parameter hc_machine_type]]]
        Label = hc VM Type
        Description = The VM type for hc execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_HC44rs
    
        [[[parameter ncv3_machine_type]]]
        Label = ncv3 VM Type
        Description = The VM type for ncv3 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_NC24rs_v3
    
        [[[parameter nct4v3_machine_type]]]
        Label = nct4v3 VM Type
        Description = The VM type for nct4v3 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_NC64as_T4_v3
    
        [[[parameter nca100v4_machine_type]]]
        Label = nca100v4 VM Type
        Description = The VM type for nca100v4 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_NC96ads_A100_v4
    
        [[[parameter ndv2_machine_type]]]
        Label = ndv2 VM Type
        Description = The VM type for ndv2 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_ND40rs_v2
    
        [[[parameter ndv4_machine_type]]]
        Label = ndv4 VM Type
        Description = The VM type for ndv4 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_ND96asr_v4
    
        [[[parameter ndmv4_machine_type]]]
        Label = ndmv4 VM Type
        Description = The VM type for ndmv4 execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_ND96amsr_a100_v4



    [[parameters Auto-Scaling]]
    Description = "The cluster can autoscale to the workload, adding execute hosts as jobs are queued. To enable this check the box below and choose the initial and maximum core counts for the cluster"
    Order = 30

        [[[parameter Autoscale]]]
        Label = Autoscale
        DefaultValue = true
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Start and stop execute instances automatically

    
        [[[parameter hb_max_cores]]]
        Label = Max hb Cores
        Description = The total number of hb execute cores to start
        DefaultValue = 960
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter hbv2_max_cores]]]
        Label = Max hbv2 Cores
        Description = The total number of hbv2 execute cores to start
        DefaultValue = 1920
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter hbv3_max_cores]]]
        Label = Max hbv3 Cores
        Description = The total number of hbv3 execute cores to start
        DefaultValue = 1920
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter hc_max_cores]]]
        Label = Max hc Cores
        Description = The total number of hc execute cores to start
        DefaultValue = 704
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter ncv3_max_cores]]]
        Label = Max ncv3 Cores
        Description = The total number of ncv3 execute cores to start
        DefaultValue = 384
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter nct4v3_max_cores]]]
        Label = Max nct4v3 Cores
        Description = The total number of nct4v3 execute cores to start
        DefaultValue = 1024
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter nca100v4_max_cores]]]
        Label = Max nca100v4 Cores
        Description = The total number of nca100v4 execute cores to start
        DefaultValue = 1536
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter ndv2_max_cores]]]
        Label = Max ndv2 Cores
        Description = The total number of ndv2 execute cores to start
        DefaultValue = 640
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter ndv4_max_cores]]]
        Label = Max ndv4 Cores
        Description = The total number of ndv4 execute cores to start
        DefaultValue = 384
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:
    
        [[[parameter ndmv4_max_cores]]]
        Label = Max ndmv4 Cores
        Description = The total number of ndmv4 execute cores to start
        DefaultValue = 384
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true:


        [[[parameter MaxScalesetSize]]]
        Label = Max VMs per Scaleset
        Description = The maximum number of VMs created per VM Scaleset e.g. switch in Slurm.
        DefaultValue = 100
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true


        [[[parameter UseLowPrio]]]
        Label = Spot
        DefaultValue = true
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Use Spot VMs for execute hosts

        [[[parameter SpotMaxPrice]]]
        Label = Max Price
        DefaultValue = -1
        Description = Max price for Spot VMs in USD (value of -1 will not evict based on price)
        Config.Plugin = pico.form.NumberTextBox
        Conditions.Excluded := UseLowPrio isnt true
        Config.MinValue = -1

        [[[parameter NumberLoginNodes]]]
        Label = Num Login Nodes
        DefaultValue = 0
        Description = Number of optional login nodes to create.
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 10000
        Config.IntegerOnly = true

    [[parameters Networking]]
    Order = 40

        [[[parameter SubnetId]]]
        Label = Subnet ID
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        ParameterType = Azure.Subnet
        Required = True

[parameters Network Attached Storage]
Order = 15


    [[parameters Scheduler Mount]]
    Order = 5
        [[[parameter About sched]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = ''' <p>The directory <code>/sched</code> is a network attached mount and exists in all nodes of the cluster. 
            Slurm's configuration is linked in from this directory. It's managed by the scheduler node. 
            To disable the mount of the /sched directory, and to supply your own for a <strong>hybrid scenario</strong>, select the checkbox below '''
        Order = 6

        [[[parameter NFSSchedDisable]]]
        HideLabel = true
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = External Scheduler

    [[parameters Default NFS Share]]
    Order = 10
        [[[parameter About shared]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<p>The directory <code>/shared</code> is a network attached mount and exists in all nodes of the cluster. Users' home directories reside within this mountpoint with the base homedir <code>/shared/home</code>.<br><br>There are two options for providing this mount:<br> <strong>[Builtin]</strong>: The scheduler node is an NFS server that provides the mountpoint to the other nodes of the cluster.<br> <strong>[External NFS]</strong>: A network attached storage such as Azure Netapp Files, HPC Cache, or another VM running an NFS server, provides the mountpoint.</p>"
        Order = 20

        [[[parameter NFSType]]]
        Label = NFS Type
        ParameterType = StringList
        Config.Label = Type of NFS to use for this cluster
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="External NFS"; Value="External"], [Label="Builtin"; Value="Builtin"]}
        DefaultValue = Builtin

        [[[parameter NFSAddress]]]
        Label = NFS IP Address
        Description = The IP address or hostname of the NFS server. Also accepts a list comma-separated addresses, for example, to mount a frontend load-balanced Azure HPC Cache.
        Config.ParameterType = String
        Conditions.Hidden := NFSType != "External"

        [[[parameter NFSSharedExportPath]]]
        Label = Shared Export Path
        Description = The path exported by the file system
        DefaultValue = /shared
        Conditions.Hidden := NFSType != "External"

        [[[parameter NFSSharedMountOptions]]]
        Label = NFS Mount Options
        Description = NFS Client Mount Options
        Conditions.Hidden := NFSType != "External"

        [[[parameter FilesystemSize]]]
        Label = Size (GB)
        Description = The filesystem size
        DefaultValue = 2000

        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 10
        Config.MaxValue = 10240
        Config.IntegerOnly = true
        Conditions.Excluded := NFSType != "Builtin"

    [[parameters Additional NFS Mount]]
    Order = 20
        [[[parameter Additional NFS Mount Readme]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<p>Mount another NFS endpoint on the cluster nodes</p>"
        Order = 20

        [[[parameter AdditionalNAS]]]
        HideLabel = true
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Add NFS mount

        [[[parameter AdditonalNFSAddress]]]
        Label = NFS IP Address 
        Description = The IP address or hostname of the NFS server. Also accepts a list comma-separated addresses, for example, to mount a frontend load-balanced Azure HPC Cache.
        Config.ParameterType = String
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSMountPoint]]]
        Label = NFS Mount Point
        Description = The path at which to mount the Filesystem
        DefaultValue = /data
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSExportPath]]]
        Label = NFS Export Path
        Description = The path exported by the file system
        DefaultValue = /data
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSMountOptions]]]
        Label = NFS Mount Options
        Description = NFS Client Mount Options
        Conditions.Excluded := AdditionalNAS isnt true
    

[parameters Advanced Settings]
Order = 20

    [[parameters Azure Settings]]
    Order = 10 

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials

    [[parameters Slurm Settings ]]
    Description = "Section for configuring Slurm"
    Order = 5

        [[[parameter configuration_slurm_version]]]
        Required = True
        Label = Slurm Version
        Description = Version of Slurm to install on the cluster
        ParameterType = StringList
        Config.Plugin = pico.form.Dropdown
        Config.FreeForm = true
        Config.Entries := {[Value="22.05.3-1"], [Value="20.11.9-1"], [Value="20.11.7-1"] }
        DefaultValue = 22.05.3-1

        [[[parameter configuration_slurm_accounting_enabled]]]
        Label = Job Accounting
        DefaultValue = true
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Configure Slurm job accounting

        [[[parameter configuration_slurm_accounting_url]]]
        Label = Slurm DBD URL
        Description = URL of the database to use for Slurm job accounting
        Conditions.Excluded := configuration_slurm_accounting_enabled isnt true

        [[[parameter configuration_slurm_accounting_user]]]
        Label = Slurm DBD User
        Description = User for Slurm DBD admin
        Conditions.Excluded := configuration_slurm_accounting_enabled isnt true

        [[[parameter configuration_slurm_accounting_password]]]
        Label = Slurm DBD Password
        Description = Password for Slurm DBD admin
        ParameterType = Password
        Conditions.Excluded := configuration_slurm_accounting_enabled isnt true
        
        [[[parameter configuration_slurm_shutdown_policy]]]
	Label = ShutdownPolicy
        description = By default, autostop will Delete stopped VMS for lowest cost.  Optionally, Stop/Deallocate the VMs for faster restart instead.
        DefaultValue = Terminate
        config.plugin = pico.control.AutoCompleteDropdown
            [[[[list Config.Entries]]]]
            Name = Terminate
            Label = Terminate
            [[[[list Config.Entries]]]]
            Name = Deallocate
            Label = Deallocate

        [[[parameter additional_slurm_config]]]
        Label = Additional Slurm configuration
        Description = Any additional lines to add to slurm.conf
        ParameterType = Text

        [[[parameter configuration_slurm_ha_enabled]]]
        Label = Deploy Slurm with HA
        Description = Deploy Slurm with an additional HA node
        DefaultValue = false
        ParameterType = Boolean
	


    [[parameters Software]]
    Description = "Specify the scheduling software, and base OS installed on all nodes, and optionally the cluster-init and chef versions from your Locker."
    Order = 10

        [[[parameter NodeNameIsHostname]]]
        Label = Name As Hostname
        Description = Should the hostname match the nodename for execute nodes?
        ParameterType = Boolean
        DefaultValue = true

        [[[parameter NodeNamePrefix]]]
        Label = Node Prefix
        Description = Prefix for generated node names, i.e. "prefix-" generates prefix-nodearray-1. Use 'Cluster Prefix' to get $ClusterName-nodearray-1
        ParameterType = StringList
        Config.Plugin = pico.form.Dropdown
        Config.FreeForm = true
        DefaultValue = "Cluster Prefix"
        Config.Entries := {[Value=""], [Value="Cluster Prefix"]}
        Conditions.Hidden := NodeNameIsHostname != true

        [[[parameter SchedulerHostName]]]
        Label = Scheduler Hostname
        Description = Hostname of scheduler. 'Generated' uses the default generated hostname. 'Cluster Prefix' will generate $ClusterName-scheduler.
        ParameterType = StringList
        Config.Plugin = pico.form.Dropdown
        Config.FreeForm = true
        DefaultValue = "Cluster Prefix"
        Config.Entries := {[Value="Generated"], [Value="Cluster Prefix"]}
        Conditions.Hidden := NodeNameIsHostname != true

        [[[parameter SchedulerImageName]]]
        Label = Scheduler OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
        Config.Filter := Package in {"cycle.image.centos7", "cycle.image.centos8", "cycle.image.ubuntu18", "almalinux8"}

    
        [[[parameter hb_image_name]]]
        Label = HB OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter hbv2_image_name]]]
        Label = HBV2 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter hbv3_image_name]]]
        Label = HBV3 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter hc_image_name]]]
        Label = HC OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter ncv3_image_name]]]
        Label = NCv3 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter nct4v3_image_name]]]
        Label = NCT4v3 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter nca100v4_image_name]]]
        Label = NCA100v4 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter ndv2_image_name]]]
        Label = NDv2 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter ndv4_image_name]]]
        Label = NDv4 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest
    
        [[[parameter ndmv4_image_name]]]
        Label = NDmv4 OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = microsoft-dsvm:ubuntu-hpc:2004:latest


        [[[parameter SchedulerClusterInitSpecs]]]
        Label = Scheduler Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to the scheduler node
        ParameterType = Cloud.ClusterInitSpecs
    
    
        [[[parameter hb_init_specs]]]
        Label = hb Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to hb execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter hbv2_init_specs]]]
        Label = hbv2 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to hbv2 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter hbv3_init_specs]]]
        Label = hbv3 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to hbv3 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter hc_init_specs]]]
        Label = hc Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to hc execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter ncv3_init_specs]]]
        Label = ncv3 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to ncv3 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter nct4v3_init_specs]]]
        Label = nct4v3 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to nct4v3 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter nca100v4_init_specs]]]
        Label = nca100v4 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to nca100v4 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter ndv2_init_specs]]]
        Label = ndv2 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to ndv2 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter ndv4_init_specs]]]
        Label = ndv4 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to ndv4 execute nodes
        ParameterType = Cloud.ClusterInitSpecs
    
        [[[parameter ndmv4_init_specs]]]
        Label = ndmv4 Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to ndmv4 execute nodes
        ParameterType = Cloud.ClusterInitSpecs

	

    [[parameters Advanced Networking]]
    Description = Advanced networking settings

        [[[parameter ReturnProxy]]]
        Label = Return Proxy
        DefaultValue = false
        ParameterType = Boolean
        Config.Label = Use SSH tunnel to connect to CycleCloud (required if direct access is blocked)

        [[[parameter UsePublicNetwork]]]
        Label = Public Head Node
        DefaultValue = false
        ParameterType = Boolean
        Config.Label = Access scheduler node from the Internet

        [[[parameter ExecuteNodesPublic]]]
        Label = Public Execute
        DefaultValue = false
        ParameterType = Boolean
        Config.Label = Access execute nodes from the Internet
        Conditions.Excluded := UsePublicNetwork isnt true
    
